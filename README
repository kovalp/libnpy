                   libnpy

This is a small library for writing an array to a .npy file, so that it
can easily be loaded into a numpy application.  For a description of
the file format, do

>> from numpy.lib import format
>> help(format)

The od (octal dump) command provides a simple way to look at the contents
of a .npy file, and especially to check the metadata:

$ od -c file.npy


To build the archive libnpy.a and run a couple of simple test programs, go to
the src/ subdirectory and do

make
make check

The library provides the C functions

npy_save
npy_save_double
npy_save_float
npy_save_int
npy_save_float_complex
npy_save_double_complex

If you require Fortran bindings, do

make fortran
make check_fortran

The Fortran module fnpy contains the subroutines

save_single
save_double
save_integer
save_complex_single
save_complex_double

The C function npy_save can write any type of array; the others are
convenience routines that call npy_save.

I have tested this code using gcc/gfortran 4.4.4 and numpy 1.3.0
on Fedora 13 (x86_64).

The MIT License applies to this software; see the LICENSE file in this
directory.

Bill McLean 
School of Maths and Stats
University of NSW


CHANGELOG

31/05/2009 Version 0.1

12/10/2009 Version 0.2: Change sizeof(...) to (int) sizeof(...) in
third argument of sprintf() to stop warnings from gcc-4.4.1.  Changed
int shape[ndims] to int* shape to work around a problem with nvcc,
the Nvidia cuda compiler (requested by Stéphane Gaudreault).

12/10/2009 Version 0.3: Modified include/npy.h to add extern "C" when
compiled with C++ (suggested by Stéphane Gaudreault).

04/06/2010 Version 0.4: Added support for MAC OSX (patch provided
by Vladimir Chalupecky).  Modified the makefile so that the Fortran
bindings are optional.  The header file npy.h now provides a const
string LIBNPY_VERSION giving the library version.

18/03/2011 Version 0.5: Changed src/check_npy.py so that the for-loop
is not executed when the file is imported as a module.  This change was
in response to an email from Mark Rosin, who observed that
'make check_fortran' fails if you do not first run 'make check'.
